version: 2.1

orbs:
  ruby-orbs: sue445/ruby-orbs@volatile
  heroku: circleci/heroku@0.0.2

executors:
  default:
    docker:
      - image: circleci/ruby:2.5.3-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: ubuntu
          RAILS_ENV: test
      - image: circleci/postgres:10-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: chatwork_mention_task_test
      - image: memcached:1.5-alpine
    working_directory: ~/app

commands:
  with-cc-test-reporter:
    description: "Run test with cc-test-reporter"
    parameters:
      steps:
        type: steps
        default: []
        description: "Run steps between `before-build` and `after-build`"
    steps:
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: ./cc-test-reporter before-build
      - steps: << parameters.steps >>
      - run: ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

jobs:
  rspec:
    executor:
      name: default

    environment:
      CC_TEST_REPORTER_ID: 2a6fed458d94b636376fab1b94b919d2ef166042352e012df00e333475b8aa48

    steps:
      - checkout
      - ruby-orbs/bundle-install:
          cache_key_prefix: "v2-bundle"
      - run: ./.circleci/setup_database.sh

      - with-cc-test-reporter:
          steps:
            - run: bundle exec rspec

  index_shotgun:
    executor:
      name: default

    steps:
      - checkout
      - ruby-orbs/bundle-install:
          cache_key_prefix: "v2-bundle"
      - run: ./.circleci/setup_database.sh

      - run: ./bin/rails index_shotgun:fire

  rubocop:
    executor:
      name: default

    steps:
      - checkout
      - ruby-orbs/bundle-install:
          cache_key_prefix: "v2-bundle"

      - run: bundle exec rubocop

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - rspec
      - index_shotgun
      - rubocop
      - heroku/deploy-via-git:
          context: Heroku
          requires:
            - rspec
            - index_shotgun
            - rubocop
          filters:
            branches:
              only: master
